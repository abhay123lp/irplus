<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for file download roll up processing record
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.statistics">
	<class name="FileDownloadRollUpProcessingRecord" schema="ir_statistics" table="ir_file_roll_up_processing_record"
		lazy="true">

		<!-- Common id property. -->
		<id name="id" type="long" column="ir_file_roll_up_processing_record_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_statistics.ir_file_roll_up_processing_record_seq</param>
			</generator>
		</id>
			
		<property name="irFileId" column="ir_file_id" type="long"
			access="field" not-null="true"/>
			
		<property name="createdDate" column="created_date" type="timestamp"
			access="field" />

	</class>
	
	<!-- named query for getting a the roll up by ir file id -->
	<query name="getRollUpProcessingRecordByIrFileId">
		from FileDownloadRollUpProcessingRecord as fileDownloadRollUpProcessingRecord where
		fileDownloadRollUpProcessingRecord.irFileId = ? 
	</query>
	
	<!-- get all file download roll up processing records ordered by id -->
	<query name="getAllFileDownloadRollUpProcessingRecords">
		select fileDownloadRollUpProcessingRecord  from FileDownloadRollUpProcessingRecord fileDownloadRollUpProcessingRecord 
	    order by fileDownloadRollUpProcessingRecord.id 
	</query>
	
	<!--  this inserts all files to be reprocessed  -->
	<query name="insertAllRepositoryFileIds">
	    insert into FileDownloadRollUpProcessingRecord (irFileId, createdDate )
	    select irFileId, current_timestamp()
	    from FileDownloadInfo
		where irFileId not in( select rollUpRecord.irFileId from FileDownloadRollUpProcessingRecord as rollUpRecord)
		group by irFileId
	</query>
	
		
</hibernate-mapping>