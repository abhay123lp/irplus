<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for a versioned file.
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.file">
	<class name="VersionedFile" schema="ir_file" table="versioned_file"
		lazy="true">

		<!-- Common id property. -->
		<id name="id" type="long" column="versioned_file_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_file.versioned_file_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />
			
		<property name="name" column="name" type="string"
			not-null="true" access="field" />
			
		<property name="description" column="description" type="string"
			not-null="false" access="field"/>
			
	    <property name="extension" column="extension" type="string"
			not-null="false" access="field"/>

		<property name="currentFileSizeBytes" 
		    column="current_file_size_bytes" 
		    type="long"
			access="field"/>
			
		<property name="totalSizeForAllFilesBytes" 
		    column="total_file_size_all_files_bytes" 
		    type="long"
			access="field"/>
		
			
		<property name="maxVersion" 
		    column="largest_file_version_id" 
		    type="int"
			not-null="true" 
			access="field"/>
			

		<!--  current version of the file -->
        <many-to-one name="currentVersion" 
              class="edu.ur.ir.file.FileVersion" 
              lazy="false"
              fetch="join" 
              unique="true" 
              column="current_file_version_id" 
              access="field"/>
       	
       	<!--  Files maintained by this versioned file -->
	 	<set name="versions"
	 	     cascade="all, delete-orphan" 
	 	     order-by="version_number desc" 
	 	     inverse="true" 
	 	     lazy="true"
	 	     fetch="subselect"
	 	     access="field">
			<key column="versioned_file_id"/>
			<one-to-many class="edu.ur.ir.file.FileVersion" />
		</set>
		
		<!--  The user who owns this file -->
        <many-to-one name="owner" class="edu.ur.ir.user.IrUser" 
              unique="true" column="user_id" access="field"/>

		<!--  The user who locked this file -->
        <many-to-one name="lockedBy" class="edu.ur.ir.user.IrUser" 
              unique="true" column="locked_user_id" access="field"/>
              
		<!--  Collaborators for this file -->
		<set name="collaborators" cascade="all, delete-orphan" 
		    access="field"
		    lazy="true"
		    fetch="subselect"
		    inverse="true">
		    <key column="versioned_file_id" not-null="true"/>
		    <one-to-many class="FileCollaborator"/>
		</set>

		<!-- Invitees not in the system for this file -->
		<set name="invitees" 
		     table="ir_user.invite_files" 
		     access="field" 
		     lazy="true"
		     fetch="subselect">
			<key column="versioned_file_id" not-null="true"/>
			<many-to-many  column="invite_info_id" class="edu.ur.ir.user.FileInviteInfo"/>
		</set>
		
	</class>
		
	<!--  Get a count of versioned files in the system -->
	<query name="versionedFileCount">
	    select count(*) from VersionedFile
	</query>
	
	<!-- named query for getting all versioned files ordered by name -->
    <query name="getAllVersionedIrFileNameAsc">from VersionedFile order by name </query>
    
    <!-- named query for getting a versioned file by name -->
	<query name="getVersionedIrFileByName">
		from VersionedFile as VersionedFile where
		VersionedFile.name = ?
	</query>
	
    <!-- named query for getting a versioned file by ir file id  -->
	<query name="getVersionedFileByIrFileId">
		select versionedFile from VersionedFile as versionedFile 
		join versionedFile.versions as fileVersion where
		fileVersion.irFile.id = ?
	</query>	

    <!-- named query for getting a versioned file by ir file id  -->
	<query name="getVersionedFilesForItemId">
		select versionedFile from VersionedFile as versionedFile 
		join versionedFile.versions as fileVersion where
		fileVersion.irFile.id in (Select itemFile.irFile.id from ItemFile as itemFile where itemFile.item.id = ?)
	</query>	


    <!-- named query for getting a sum of versioned file by user id  -->
	<query name="getSumOfVersionedFilesSizeForUser">
		select sum(versionedFile.totalSizeForAllFilesBytes) from VersionedFile as versionedFile 
		where versionedFile.owner.id = ?
	</query>	


</hibernate-mapping>