<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for a transformed file type
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.file">
	<class name="TransformedFile" schema="ir_file" table="transformed_file"
		lazy="true">
		
		<!-- Common id property. -->
		<id name="id" type="long" column="transformed_file_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_file.transformed_file_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />
			
		<property name="publicViewable" column="public_viewable" 
		     type="boolean" not-null="true"
			 access="field" />

        <!--  Parent file the transform was created from -->
		<many-to-one class="edu.ur.ir.file.IrFile"  
		    optimistic-lock="false"
		    cascade="save-update" 
		    insert="true" 
		    update="true" 
			name="actualFile" 
			unique="true" 
			column="actual_file_id"  
			access="field"/>
			
		<many-to-one class="edu.ur.file.db.DefaultFileInfo" 
		    optimistic-lock="false"
		    cascade="save-update"
			name="transformedFile" 
			unique="true" 
			column="transformed_id" 
			not-null="true"
			access="field"/>
			
		<!-- Transformed file type for the file that has been transformed-->
		<many-to-one class="TransformedFileType" 
		    optimistic-lock="false"
			name="transformedFileType" 
			column="transformed_file_type_id" 
			unique="true"/>
			
	 </class>
	 
    <!-- named query for getting an item by name -->
	<query name="getTransformByIrFileIdTransformTypeSystemCode">
		select fileInfo from TransformedFile as transform
		   inner join transform.transformedFile as fileInfo
		where transform.actualFile.id = ? 
		and transform.transformedFileType.systemCode = ? 
	</query>
	
</hibernate-mapping>