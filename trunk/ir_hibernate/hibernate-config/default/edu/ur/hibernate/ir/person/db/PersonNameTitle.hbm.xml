<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for a Person name title
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.person">
	<class name="PersonNameTitle" table="person.person_name_title"
		lazy="true">

		<!-- Common id property. -->
		<id name="id" type="long" column="person_name_title_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">person.person_name_title_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />
		
	    <property name="title" column="value" type="string"
			not-null="true" access="field" />

		<!--  Person name who owns the title-->
		<many-to-one class="PersonName" 
			name="personName" column="person_name_id" not-null="true" 
			insert="false"
			update="false" unique="true" access="field"/>
    </class>
		
	<!--  Get a count of folders in the system -->
	<query name="personNameTitleCount">
	    select count(*) from PersonNameTitle
	</query>

    <!-- named query for getting all person name titles for person name like the specified person name id -->
    <query name="findPersonNameTitleForPersonNameID">from PersonNameTitle personNameTitle where personNameTitle.personName like ? order by value </query>

	
</hibernate-mapping>