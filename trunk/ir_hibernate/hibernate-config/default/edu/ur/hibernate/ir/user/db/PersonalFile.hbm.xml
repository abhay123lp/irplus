<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for a personal versioned file.
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.user">

	<class name="PersonalFile" schema="ir_user" table="personal_file"
		lazy="true">

        <cache usage="nonstrict-read-write" />
		<!-- Common id property. -->
		<id name="id" type="long" column="personal_file_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_user.personal_file_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />
			
        <!--  The versioned file this personal versioned file wraps -->
        <many-to-one name="versionedFile"
              lazy="false"
              fetch="join" 
              class="edu.ur.ir.file.VersionedFile" 
              unique="true" 
              column="versioned_file_id" 
              cascade="save-update"
              not-null="true" 
              access="field"/>
        
        <!--  The personal folder -->
        <many-to-one name="personalFolder" class="PersonalFolder" 
              unique="true" 
              column="personal_folder_id" 
              cascade="save-update"
              access="field"/>

        <!--  The user who owns this file -->
        <many-to-one name="owner" 
              lazy="false"
              fetch="join" 
              class="IrUser" 
              unique="true" 
              column="user_id" 
              not-null="true" 
              access="field"/>

        
	</class>
	
	    <!-- named query for a getting a file  -->
	<query name="getFileWithSpecifiedUserIdAndVerionFileID">
		from PersonalFile as PersonalFile where
		PersonalFile.owner.id = ? and PersonalFile.versionedFile.id = ?
	</query>
	
	 <!-- named query for a getting a file  -->
	 <query name="getFileWithSpecifiedUserIdAndIrFileID">
		select PersonalFile 
		from PersonalFile as PersonalFile 
		join PersonalFile.versionedFile.currentVersion as FileVersion where FileVersion.versionedFile.id = PersonalFile.versionedFile.id and
		   PersonalFile.owner.id = ?  and FileVersion.irFile.id = ?
	</query>
	
	<!-- named query for getting files in a folder -->
	<query name="getFilesInAFolderForUser">
		from PersonalFile as personalFile where
		personalFile.owner.id = :userId and personalFile.personalFolder.id = :folderId
	</query>
	
	<!-- named query for getting files for root level - the user -->
	<query name="getRootFiles">
		from PersonalFile as personalFile where
		personalFile.owner.id = :userId and personalFile.personalFolder.id is NULL
	</query>
	
   <!-- named query for getting files  -->
	<query name="getFiles">
		from PersonalFile as PersonalFile where
		PersonalFile.owner.id = :userId
		and PersonalFile.id in (:fileIds)
	</query>
	
	<!-- named query for getting files in a folder -->
	<query name="getPersonalFilesWithIrFileId">
		select count(*)
		from PersonalFile as personalFile 
		join personalFile.versionedFile versionedFile
		join versionedFile.versions fileVersion
		join fileVersion.irFile irFile
		where
		irFile.id = ? 
	</query>
	
    
</hibernate-mapping>