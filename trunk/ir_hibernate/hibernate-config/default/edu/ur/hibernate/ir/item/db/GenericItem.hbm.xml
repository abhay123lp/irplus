<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for an Item.
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.item">
	<class name="GenericItem" schema="ir_item" table="item"
		lazy="true">

		<!-- Common id property. -->
		<id name="id" type="long" column="item_id"
			unsaved-value="0" access="field" >
			<generator class="sequence" >
				<param name="sequence">ir_item.item_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />

		<property name="name" column="name" type="string"
			not-null="true" access="field" />
		
		<property name="lowerCaseName" column="lower_case_name" type="string"
			not-null="true" access="field" />
		
		<property name="leadingNameArticles" column="leading_name_articles" type="string"
			access="field" />
			
		<property name="nameFirstChar" column="name_first_char" type="char"
			not-null="true" access="field" />
			
		<property name="description" column="description" type="string"
			not-null="false" access="field"/>
		
		<property name="itemAbstract" column="abstract" type="string"
			not-null="false" access="field"/>
			
		<property name="itemKeywords" column="keywords" type="string"
			not-null="false" access="field"/> 
			
		<property name="publishedToSystem" column="published" type="boolean"
			not-null="true" access="field"/>
			
		<property name="thesis" column="thesis" type="boolean"
			not-null="true" access="field"/>
			
		<property name="locked" column="locked_for_review" type="boolean"
			not-null="true" access="field"/>

		<property name="publiclyViewable" column="publicly_viewable" type="boolean" 
		          access="field" 
		          not-null="true"/>	
		          
		<property name="releaseDate" column="release_date" type="date" 
		          access="field" />	
		
		
		<!-- Copyright Statement information  -->
		<many-to-one class="CopyrightStatement"
			name="copyrightStatement" 
			access="field"
			column="copyright_statement_id" 
			insert="true"
			unique="true" />
		
	    <!-- Primary image information  -->
		<many-to-one class="ItemFile"
			name="primaryImageFile" 
			access="field"
			column="primary_image_item_file_id" 
			unique="true" 
			cascade="delete"/>
			
		<!--  Date the item was originally created - for example a photo created in 1880  -->
		<many-to-one class="OriginalItemCreationDate" 
			name="originalItemCreationDate" 
			access="field"
			column="original_item_creation_date_id" 
			insert="true"
			update="true" 
			unique="true"  
			cascade="all"/>

		<!-- Date the Item will be first made available to public -->
		<many-to-one class="FirstAvailableDate" 
			name="firstAvailableDate" 
			column="first_available_date_id" 
			access="field"
			insert="true"
			update="true" 
			unique="true"  
			cascade="all"/>			
					          
		<!-- User this item belongs to -->
		<many-to-one class="edu.ur.ir.user.IrUser" 
			name="owner" 
			column="user_id" 
			access="field" 
			unique="true"/>

	    <!-- Language type for the item-->
		<many-to-one class="LanguageType" 
			name="languageType" 
			column="language_type_id" 
			insert="true"
			access="field"
			unique="true"/>
			
	    <!-- Content type for the item-->
		<many-to-one class="ContentType" 
			name="primaryContentType" 
			access="field"
			column="content_type_id" 
			insert="true"
			unique="true"/>
			
		<!-- Externally published information  -->
		<many-to-one class="ExternalPublishedItem" 
			name="externalPublishedItem" 
			column="external_published_item_id" 
			insert="true"
			update="true" 
			unique="true"  
			access="field"
			cascade="all"/>

		<!--  Sponsors for this Item -->	
		<set name="itemSponsors" 
		    schema="ir_item" 
		    inverse="true" 
		    cascade="all-delete-orphan" 
		    access="field" 
		    fetch="subselect"
		    lazy="true">
			<key column="item_id" not-null="true"/>
			<one-to-many class="ItemSponsor"/>
		</set>

		<!-- types for this item -->
		<set name="secondaryContentTypes" 
		     table="ir_item.item_content_type" 
		     access="field" 
		     lazy="true"
		     fetch="subselect">
			<key column="item_id" />
			<many-to-many column="content_type_id" class="edu.ur.ir.item.ContentType"/>
		</set>
					
		<!--  Files this Item references -->	
		<set name="itemFiles" 
		     schema="ir_item" 
		     cascade="all-delete-orphan" 
		     access="field"
			 lazy="true" 
			 inverse="true"
			 fetch="subselect"
			 table="item_file">
			<key column="item_id" not-null="true"/>
			<one-to-many class="edu.ur.ir.item.ItemFile"/>
		</set>
		
		<!--  Files this Item references -->	
		<set name="itemReports" 
		     schema="ir_item" 
		     cascade="all-delete-orphan" 
		     access="field"
		     fetch="subselect"
		     inverse="true"
			 lazy="true" 
			 table="item_series_report_number">
			<key column="item_id" not-null="true"/>
			<one-to-many class="edu.ur.ir.item.ItemReport"/>
		</set>
		
	    <!--  Links for this Item -->	
		<set name="links" 
		    cascade="all-delete-orphan" 
		    access="field"
		    fetch="subselect"
			lazy="true" 
			schema="ir_item" 
			inverse="true"
			table="item_link">
			<key column="item_id" not-null="true"/>
			<one-to-many class="edu.ur.ir.item.ItemLink"/>
		</set>
		
		<!--  Contributors for this Item -->	
		<list name="contributors" 
		    cascade="all-delete-orphan"
		    inverse="true"
		    access="field" 
		    schema="ir_item" 
		    table="item_contributor" 
		    fetch="subselect"
		    lazy="true">
		    <key column="item_id"/>
		    <list-index column="contributor_order"/>
		    <one-to-many  class="edu.ur.ir.item.ItemContributor"/>
		</list>
	
		
		<!--  identifiers for this Item -->	
		<set name="itemIdentifiers" 
		    schema="ir_item" 
		    inverse="true" 
		    cascade="all-delete-orphan" 
		    access="field" 
		    fetch="subselect"
		    lazy="true">
			<key column="item_id" not-null="true"/>
			<one-to-many class="ItemIdentifier"/>
		</set>

		<!--  extents for this Item -->	
		<set name="itemExtents" 
		     schema="ir_item" 
		     inverse="true" 
		     cascade="all-delete-orphan" 
		     access="field"
		     fetch="subselect" 
		     lazy="true">
			<key column="item_id" not-null="true"/>
			<one-to-many class="ItemExtent"/>
		</set>
		
	    <!-- Sub titles for this Item	-->
		<set name="subTitles" 
		    cascade="all-delete-orphan" 
		    access="field"
		    inverse="true"
			lazy="true" 
			fetch="subselect"
			schema="ir_item" 
			table="item_title">
			<key column="item_id" not-null="true"/>
			<one-to-many class="edu.ur.ir.item.ItemTitle"/>
		</set>	
		
	</class>
		
	<!--  Get a count of items in the system -->
	<query name="itemCount">
	    select count(*) from GenericItem
	</query>
	
	<!-- named query for getting all items ordered by name -->
    <query name="getAllItemNameAsc">from GenericItem order by lowerCaseName </query>
    
    <!-- named query for getting an item by name -->
	<query name="getItemByName">
		from GenericItem as Item where
		Item.name = ?
	</query>
	
	<!-- named query for getting the contributions a person could have made to a given item -->
	<query name="getPossibleContributions">
        select contributorType 
        from ContributorType contributorType
        where contributorType not in
            ( select contribType
              from GenericItem as item
              join item.contributors as itemContributor
              join itemContributor.contributor as contributor
              join contributor.contributorType as contribType
              join contributor.personName as name
              where name.id = ?
              and item.id = ?)
	</query>
	
    <!--  Get a count for the number of contributions made by a given contributor. -->
	<query name="itemContributionCount">
	    select count(*) from ItemContributor as itemContributor
	    join itemContributor.contributor as contributor
	    where contributor.id = ?
	</query>
	
	<!--  Get a count for the number of contributions made by a given contributor. -->
	<query name="itemContributionByPersonNameCount">
	    select count(*) from ItemContributor as itemContributor
	    join itemContributor.contributor as contributor
	    join contributor.personName as personName
	    where personName.id = ?
	</query>
	
	
	<!-- named query for getting the identifier types that can be applied to an item -->
	<query name="getPossibleIdentifierTypes">
        select identifierType 
        from IdentifierType identifierType
        where identifierType not in
            ( select identifierType
              from GenericItem as item
              join item.itemIdentifiers as itemIdentifier
              join itemIdentifier.identifierType as identifierType
              where item.id = ?)
	</query>
	
	<!-- named query for getting all the item belonging to an user -->
	<query name="getAllItemsForUser">
        from GenericItem genericItem
        where genericItem.owner.id = ?
	</query>
	
		<!-- No. of downloads for an item -->
	<query name="getItemDownloadCount">
		select sum(irFile.downloadCount) from 
		GenericItem as item 
		join item.itemFiles itemFile
		join itemFile.irFile irFile 
	    where item.id = ?
	</query>
		
	
</hibernate-mapping>