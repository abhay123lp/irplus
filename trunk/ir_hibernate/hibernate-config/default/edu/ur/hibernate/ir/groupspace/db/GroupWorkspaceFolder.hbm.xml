<?xml version="1.0"?>

<!--  
   Copyright 2008 - 2011 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for group workspace.
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.groupspace">
	<class name="GroupWorkspaceFolder" schema="ir_group_workspace"
	    table="group_workspace_folder"
		lazy="true">
     
     	<!-- Common id property. -->
		<id name="id" type="long" column="group_workspace_folder_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_group_workspace.group_workspace_folder_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />

		<property name="name" column="name" type="string"
			not-null="true" access="field" />

		<property name="description" column="description" type="string"
			not-null="false" />
			
		<property name="leftValue" column="left_value" type="long"
			not-null="true" access="field" />
			
		<property name="rightValue" column="right_value" type="long"
			not-null="true" access="field" />
		
		<property name="path" column="path" type="string"
			not-null="false" access="field" />
		
		<!--  Parent Folder -->
		<many-to-one class="GroupWorkspaceFolder" 
			name="parent" column="parent_id" insert="true"
			update="true" access="field"/>
			
	    <!--  Root Personal folder of the tree-->
		<many-to-one class="GroupWorkspaceFolder" 
			name="treeRoot"
			column="root_group_workspace_folder_id" 
			insert="true"
			update="true" 
			not-null="true"
			access="field"/>
		
	    <!-- Group This folder belongs to -->
		<many-to-one class="GroupWorkspace" 
			name="groupWorkspace" 
			column="group_workspace_id" 
			insert="true"
			update="true" 
			unique="true"/>

	    <!-- User This folder belongs to -->
		<many-to-one class="edu.ur.ir.user.IrUser" 
			name="owner" 
			column="user_id" 
			insert="true"
			update="true" 
			unique="true"/>
			
		<!--  Children folders - we cannot cascade the delete orphan
		      because children folders can be promoted to root folders -->
		<set name="children" 
		     optimistic-lock="false"
		     inverse="true" 
		     cascade="all" 
		     access="field"
			 fetch="subselect" 
			 lazy="true">
			<key column="parent_id"/>
			<one-to-many class="GroupWorkspaceFolder"/>
		</set>

		<!--  Children files - cannot cascade the delete orphan because child
		files can be promoted to root files -->
		<set name="files" 
		    optimistic-lock="false"
		    inverse="true" 
		    cascade="all" 
		    access="field" 
		    lazy="true"
		    fetch="subselect">
			<key column="group_workspace_folder_id" not-null="true"/>
			<one-to-many class="GroupWorkspaceFile"/>
		</set>
	</class>
	
	<!-- Get root folders -->
	<query name="getGroupWorkspaceRootFolders">
	    from GroupWorkspaceFolder as folder	    
	    where folder.groupWorkspace.id = :groupWorkspaceId
	    and folder.id = folder.treeRoot.id
	</query>
     
    <!-- Gets the path for a given folder-->
	<query name="getGroupWorkspaceFolderPath">
	    from GroupWorkspaceFolder as folder 	    
	    where :leftValue between folder.leftValue and folder.rightValue
	    and folder.treeRoot.id = :rootId
	    and folder.owner.id = :userId
	    order by folder.leftValue
	</query>
	
	<!-- Gets all sub folders within the parent folder -->
	<query name="getWorkspaceFolders">
	    from GroupWorkspaceFolder as folder	    
	    where folder.groupWorkspace.id = :workspaceId
	    and folder.parent.id = :parentId
	</query>
	
		<!-- Get root folders -->
	<query name="getRootWorkspaceFolders">
	    from GroupWorkspaceFolder as folder	    
	    where folder.groupWorkspace.id = :workspaceId
	    and folder.id = folder.treeRoot.id
	</query>
	
			
	<!--  All files for the specified folder including files in sub folders -->
	<query name="getAllGroupWorkspaceFilesForFolder">
	    from GroupWorkspaceFile as groupFile
	    where groupFile.groupWorkspaceFolder.leftValue between :leftValue and :rightValue
	    and groupFile.groupWorkspaceFolder.treeRoot.id = :rootId
	</query>
	
</hibernate-mapping>