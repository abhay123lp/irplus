<?xml version="1.0"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   


<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for a group versioned file.
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.groupspace">

	<class name="GroupWorkspaceFile" schema="ir_group_workspace" table="group_workspace_file"
		lazy="true">

        <cache usage="nonstrict-read-write" />
		<!-- Common id property. -->
		<id name="id" type="long" column="group_workspace_file_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_group_workspace.group_workspace_file_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />
			
        <!--  The versioned file this personal versioned file wraps -->
        <many-to-one name="versionedFile"
              lazy="false"
              fetch="join" 
              class="edu.ur.ir.file.VersionedFile" 
              unique="true" 
              column="versioned_file_id" 
              cascade="save-update"
              not-null="true" 
              access="field"/>
        
        <!--  The group folder -->
        <many-to-one name="groupWorkspaceFolder" class="GroupWorkspaceFolder" 
              unique="true" 
              column="group_workspace_folder_id" 
              cascade="save-update"
              access="field"/>

              
        <!-- Group This file belongs to -->
		<many-to-one class="GroupWorkspace" 
			name="groupWorkspace" 
			column="group_workspace_id" 
			insert="true"
			update="true" 
			unique="true"/>
	</class>
	
	
    <!-- named query for getting files in a folder -->
	<query name="getFilesInAFolderForGroupWorkspace">
		from GroupWorkspaceFile as groupWorkspaceFile where
		groupWorkspaceFile.groupWorkspace.id = :workspaceId and groupWorkspaceFile.groupWorkspaceFolder.id = :folderId
	</query>

    <!-- named query for getting all files in a group Workspace -->
	<query name="getAllFilesInGroupWorkspace">
		from GroupWorkspaceFile as groupWorkspaceFile where
		groupWorkspaceFile.groupWorkspace.id = :workspaceId 
	</query>

	
	<!-- named query for getting files at the root level of the workspace-->
	<query name="getRootWorkspaceFiles">
		from GroupWorkspaceFile as groupWorkspaceFile where
		groupWorkspaceFile.groupWorkspace.id = :workspaceId and groupWorkspaceFile.groupWorkspaceFolder.id is NULL
	</query>
	
		<!--  All folders for the specified folder including folders in sub folders -->
	<query name="getAllFilesUserHasPermissionFor">
	   select groupWorkspaceFile from 
	   GroupWorkspaceFile groupWorkspaceFile,
	   IrAcl irAcl
	      join irAcl.userEntries as userEntries 
	      join userEntries.irUser as user
	      join userEntries.irClassTypePermissions as classPermission 
        where  irAcl.classType.name = :className
        and classPermission.name = :permissionName
        and user.id = :userId
        and irAcl.objectId = groupWorkspaceFile.versionedFile.id
	</query>
	
	 <!-- named query for getting files  within a given group workspace and with 
         given file ids-->
	<query name="getGroupWorkspaceFiles">
		from GroupWorkspaceFile as groupWorkspaceFile
		where groupWorkspaceFile.groupWorkspace.id = :groupWorkspaceId
		and groupWorkspaceFile.id in (:fileIds)
	</query>
	
    <!-- named query for getting files with the given ir file id -->
	<query name="getGroupWorkspaceFilesWithIrFileId">
		select count(*)
		from GroupWorkspaceFile as file 
		join file.versionedFile versionedFile
		join versionedFile.versions fileVersion
		join fileVersion.irFile irFile
		where irFile.id = :irFileId 
	</query>
	
     <!-- named query for a getting a file in group with versioned file id-->
	 <query name="getGroupWorkspaceFileWithVersionedFileId">
		from GroupWorkspaceFile as file 
		where file.groupWorkspace.id = :groupWorkspaceId 
		and file.versionedFile.id = :versionedFileId
	</query>
	
</hibernate-mapping>