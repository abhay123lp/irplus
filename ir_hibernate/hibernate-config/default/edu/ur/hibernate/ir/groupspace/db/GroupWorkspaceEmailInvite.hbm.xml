<?xml version="1.0" encoding="UTF-8"?>
<!--  
   Copyright 2008 - 2011 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->   
<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!--
	Mapping for invite information to a group workspace group
	
	@author Nathan Sarr
-->
<hibernate-mapping package="edu.ur.ir.groupspace">
	<class name="GroupWorkspaceEmailInvite" schema="ir_group_workspace"
	    table="group_workspace_email_invite"
		lazy="true">

		<!-- Common id property. -->
		<id name="id" type="long" column="group_workspace_email_invite_id"
			unsaved-value="0" access="field">
			<generator class="sequence">
				<param name="sequence">ir_group_workspace.group_workspace_email_invite_seq</param>
			</generator>
		</id>

		<!-- A versioned entity. -->
		<version name="version" column="version"
			access="org.hibernate.property.DirectPropertyAccessor" />

        <!--  indicates if the user should be set as the owner. -->
        <property name="setAsOwner" column="set_as_owner" type="boolean" not-null="true" access="field" />
	    
	    <!--  invite token -->
	    <many-to-one class="edu.ur.ir.invite.InviteToken"
			name="inviteToken" 
			column="invite_token_id" 
			cascade="all"
			unique="true" 
			access="field"/>
			
	   <!-- group workspace  the user was added to -->
	   <many-to-one class="GroupWorkspace" 
			name="groupWorkspace" 
			column="group_workspace_id" 
			insert="true"
			update="false" 
			unique="true" 
			access="field"/>
	
	    <!-- permissions on group for user-->
		<set name="permissions" 
		     table="ir_group_workspace.group_workspace_email_invite_permissions" 
		     access="field" >
			<key column="group_workspace_email_invite_id" />
			<many-to-many column="class_type_permission_id" class="edu.ur.ir.security.IrClassTypePermission"/>
		</set>

    </class>
		
    <!-- named query for getting invite information for given token-->
    <query name="findGroupWorkspaceEmailInviteForToken">from GroupWorkspaceEmailInvite inviteInfo where inviteInfo.inviteToken.token = :token </query> 
 
    <!-- named query for getting invite information for given email -->
    <query name="findGroupWorkspaceEmailInviteForEmail">from GroupWorkspaceEmailInvite inviteInfo where lower(inviteInfo.inviteToken.email) = :email </query> 
    
    <!-- named query for getting invite information made by a given user -->
    <query name="getGroupWorkspaceEmailInviteMadeByUser">from GroupWorkspaceEmailInvite inviteInfo where inviteInfo.inviteToken.invitingUser.id = :userId </query> 
    
    	<!--  Get a count of roles in the system -->
	<query name="groupWorkspaceEmailInviteCount">
	    select count(*) from GroupWorkspaceEmailInvite
	</query>
	
		<!-- sort by last name asc -->
	<query name="getGroupWorkspaceEmailInviteOrderByInvitorAsc">
		select inviteInfo from GroupWorkspaceEmailInvite as inviteInfo
		order by inviteInfo.groupWorkspace.name asc, inviteInfo.inviteToken.invitingUser.lowerCaseLastName asc, inviteInfo.inviteToken.invitingUser.lowerCaseFirstName asc, inviteInfo.inviteToken.invitingUser.lowerCaseMiddleName asc
	</query>	

	<!-- sort by last name desc -->
	<query name="getGroupWorkspaceEmailInviteOrderByInvitorDesc">
		select inviteInfo from GroupWorkspaceEmailInvite as inviteInfo
		order by inviteInfo.groupWorkspace.name desc, inviteInfo.inviteToken.invitingUser.lowerCaseLastName desc, inviteInfo.inviteToken.invitingUser.lowerCaseFirstName desc, inviteInfo.inviteToken.invitingUser.lowerCaseMiddleName desc
	</query>	
	
</hibernate-mapping>